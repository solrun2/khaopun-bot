import os
import google.generativeai as genai
from dotenv import load_dotenv

# ‡πÇ‡∏´‡∏•‡∏î environment variables
load_dotenv()

# ‡∏î‡∏∂‡∏á API Key
api_key = os.getenv("GEMINI_API_KEY")

print("=== ‡∏ó‡∏î‡∏™‡∏≠‡∏ö Gemini API ‡πÅ‡∏ö‡∏ö‡∏á‡πà‡∏≤‡∏¢ ===")
print(f"API Key: {api_key[:10]}..." if api_key else "‡πÑ‡∏°‡πà‡∏û‡∏ö API Key")

if not api_key:
    print("‚ùå ‡πÑ‡∏°‡πà‡∏û‡∏ö GEMINI_API_KEY")
    exit(1)

# ‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤ API Key
print("üîß ‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤ API Key...")
genai.configure(api_key=api_key)
print("‚úÖ ‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤ API Key ‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à")

# ‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡πÄ‡∏£‡∏µ‡∏¢‡∏Å API
print("üöÄ ‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏ó‡∏î‡∏™‡∏≠‡∏ö API...")
try:
    model = genai.GenerativeModel("gemini-pro")
    response = model.generate_content("‡∏™‡∏ß‡∏±‡∏™‡∏î‡∏µ‡∏Ñ‡∏£‡∏±‡∏ö")
    print("‚úÖ ‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à!")
    print(f"‡∏Ñ‡∏≥‡∏ï‡∏≠‡∏ö: {response.text}")
except Exception as e:
    print(f"‚ùå ‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î: {e}")
    print("\n=== ‡∏ß‡∏¥‡∏ò‡∏µ‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç ===")
    print("1. ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ß‡πà‡∏≤ API Key ‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á")
    print("2. ‡∏™‡∏£‡πâ‡∏≤‡∏á API Key ‡πÉ‡∏´‡∏°‡πà‡∏à‡∏≤‡∏Å https://makersuite.google.com/app/apikey")
    print("3. ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ß‡πà‡∏≤‡πÄ‡∏õ‡∏¥‡∏î‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô Generative Language API ‡πÅ‡∏•‡πâ‡∏ß")
    print("4. ‡∏•‡∏≠‡∏á‡πÉ‡∏ä‡πâ‡∏ö‡∏±‡∏ç‡∏ä‡∏µ Google ‡∏≠‡∏∑‡πà‡∏ô")
